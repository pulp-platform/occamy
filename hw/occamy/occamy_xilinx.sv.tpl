// Copyright 2020 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51

// Author: Nils Wistoff <nwistoff@iis.ee.ethz.ch>
//
// AUTOMATICALLY GENERATED by genoccamy.py; edit the script instead.

`include "axi_flat.sv"

module occamy_xilinx
import occamy_pkg::*;
(
  input  logic             clk_i,
  input  logic             rst_ni,
  input  logic             test_mode_i,
  input  logic [ 1:0]      chip_id_i,
  input  logic [ 1:0]      boot_mode_i,
  // pad cfg
  output logic [31:0]      pad_slw_o,
  output logic [31:0]      pad_smt_o,
  output logic [31:0][1:0] pad_drv_o,
  // `uart` Interface
  output logic             uart_tx_o,
  input  logic             uart_rx_i,
  // `gpio` Interface
  input  logic [31:0]      gpio_d_i,
  output logic [31:0]      gpio_d_o,
  output logic [31:0]      gpio_oe_o,
  output logic [31:0]      gpio_puen_o,
  output logic [31:0]      gpio_pden_o,
  // `serial` Interface
  input  logic             serial_clk_i,
  input  logic [ 3:0]      serial_data_i,
  output logic [ 3:0]      serial_data_o,
  // `jtag` Interface
  input  logic             jtag_trst_ni,
  input  logic             jtag_tck_i,
  input  logic             jtag_tms_i,
  input  logic             jtag_tdi_i,
  output logic             jtag_tdo_o,
  // `i2c` Interface
  output logic             i2c_sda_o,
  input  logic             i2c_sda_i,
  output logic             i2c_sda_en_o,
  output logic             i2c_scl_o,
  input  logic             i2c_scl_i,
  output logic             i2c_scl_en_o,


  /// PCIe Ports
  <%
  soc_wide_xbar.out_pcie.emit_flat_master_port(context, "pcie", ",\n\n")
  soc_wide_xbar.in_pcie.emit_flat_slave_port(context, "pcie", "\n")
  %>
  /// HBM2e Ports
  /// HBI Ports
);

  // AXI ports of Occamy top-level
  ${soc_wide_xbar.out_pcie.req_type()} pcie_axi_req_o;
  ${soc_wide_xbar.out_pcie.rsp_type()} pcie_axi_rsp_i;

  ${soc_wide_xbar.in_pcie.req_type()} pcie_axi_req_i;
  ${soc_wide_xbar.in_pcie.rsp_type()} pcie_axi_rsp_o;

  // Assign structs to flattened ports
  `AXI_FLATTEN_MASTER(pcie, pcie_axi_req_o, pcie_axi_rsp_i)
  `AXI_FLATTEN_SLAVE(pcie, pcie_axi_req_i, pcie_axi_rsp_o)

  // Occamy top-level
  occamy_top i_occamy (
    .*
  );

endmodule
